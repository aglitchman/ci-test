# Keep this in sync with
# https://github.com/defold/defold/blob/dev/.github/workflows/engine-nightly.yml

name: Build Defold Win32

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

env:
  DM_PACKAGES_URL: ./local_sdks
  BUILD_BRANCH: ${{ vars.BUILD_BRANCH }}
  RELEASE_TAG: ${{ vars.RELEASE_TAG }}
  # Settings / Secrets and variables / Actions / Variables (tab) -> 
  #   New repository variable -> 
  #   `WIN32_SDK_RUN_ID` = copy-paste from the run id of the `package-win32-sdk.yml` run, i.e.
  #   "https://github.com/example/repo/actions/runs/12397740775" <- 12397740775 is the run id
  WIN32_SDK_RUN_ID: ${{ vars.WIN32_SDK_RUN_ID }}
  VERSION_WINDOWS_SDK_10: ${{ vars.VERSION_WINDOWS_SDK_10 }}
  VERSION_WINDOWS_MSVC_2022: ${{ vars.VERSION_WINDOWS_MSVC_2022 }}

jobs:
  bld-eng-windows:
    strategy:
      matrix:
        platform: [x86_64-win32, win32]
    runs-on: windows-2022
    steps:
      - name: Checkout Defold
        uses: actions/checkout@v4
        with:
          repository: defold/defold
          ref: ${{env.BUILD_BRANCH}}

      - name: Checkout the patch
        uses: actions/checkout@v4
        with:
          path: patch

      - name: Apply code patch
        shell: bash
        run: |
          git apply patch/angle.patch

      - name: Copy ANGLE to packages
        shell: bash
        run: |
          cp patch/angle-5fb77159-x86_64-win32.tar.gz packages/
          cp patch/angle-5fb77159-win32.tar.gz packages/

      - name: Download SDKs
        uses: actions/download-artifact@v4
        with:
          name: local_sdks
          path: local_sdks
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.WIN32_SDK_RUN_ID }}
      - shell: bash
        run: ls -l local_sdks

      - name: Install Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
        with:
          python-version: 3.13

      - name: Install Java
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          java-version: '21.0.5+11.0.LTS'
          distribution: temurin

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install dependencies
        shell: bash
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build
        shell: bash
        run: ci/ci.sh --platform=${{ matrix.platform }} --skip-builtins --skip-tests --skip-build-tests --skip-docs engine

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: defold-${{ matrix.platform }}
          path: |
            tmp/dynamo_home/bin/${{ matrix.platform }}
            tmp/dynamo_home/lib/${{ matrix.platform }}

  package-extension:
    needs: bld-eng-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Download artifact x86_64-win32
        uses: actions/download-artifact@v4
        with:
          name: defold-x86_64-win32
          path: artifacts/defold-x86_64-win32

      - name: Download artifact win32
        uses: actions/download-artifact@v4
        with:
          name: defold-win32
          path: artifacts/defold-win32

      - name: Extract ANGLE libs into extension
        run: |
          mkdir -p extension/graphics_angle/lib
          tar -xzf angle-5fb77159-win32.tar.gz -C extension/graphics_angle ./lib
          mv extension/graphics_angle/lib/win32 extension/graphics_angle/lib/x86-win32
          tar -xzf angle-5fb77159-x86_64-win32.tar.gz -C extension/graphics_angle ./lib

      - name: Copy DLLs to res folders
        shell: bash
        run: |
          mkdir -p extension/graphics_angle/res/x86-win32
          mkdir -p extension/graphics_angle/res/x86_64-win32
          cp extension/graphics_angle/lib/x86-win32/*.dll extension/graphics_angle/res/x86-win32/
          cp extension/graphics_angle/lib/x86_64-win32/*.dll extension/graphics_angle/res/x86_64-win32/

      - name: Prepare extension lib folders and copy libgraphics_opengles.lib
        run: |
          cp artifacts/defold-win32/lib/win32/libgraphics_opengles.lib extension/graphics_angle/lib/x86-win32/
          cp artifacts/defold-x86_64-win32/lib/x86_64-win32/libgraphics_opengles.lib extension/graphics_angle/lib/x86_64-win32/

      - name: Zip extension folder
        shell: bash
        run: |
          zip -r "graphics_angle-defold-${{ env.BUILD_BRANCH }}.zip" "extension"

      - name: Release extension archive
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: graphics_angle-defold-${{ env.BUILD_BRANCH }}.zip
